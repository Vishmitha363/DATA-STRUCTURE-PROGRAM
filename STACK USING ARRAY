#include <stdio.h>
#include <stdlib.h>

#define MAX 100
typedef struct {
    int top;
    int array[MAX]; 
} Stack;


void initStack(Stack* stack) {
    stack->top = -1;
}


int isEmpty(Stack* stack) {
    return stack->top == -1;
}


int isFull(Stack* stack) {
    return stack->top == MAX - 1;
}


void push(Stack* stack, int item) {
    if (isFull(stack)) {
        printf("Stack overflow\n");
        return;
    }
    stack->array[++(stack->top)] = item;
    printf("%d pushed to stack\n", item);
}


int pop(Stack* stack) {
    if (isEmpty(stack)) {
        printf("Stack underflow\n");
        return -1; 
    }
    return stack->array[(stack->top)--];
}




void displayStack(Stack* stack) {
    if (isEmpty(stack)) {
        printf("Stack is empty\n");
        return;
    }
    printf("Stack elements:\n");
    for (int i = stack->top; i >= 0; i--) {
        printf("%d\n", stack->array[i]);
    }
}


int main() {
    Stack stack;
    initStack(&stack);

    push(&stack, 10);
    push(&stack, 20);
    push(&stack, 30);

    printf("Top element is %d\n", peek(&stack));

    printf("Stack after popping an element:\n");
    pop(&stack);

    displayStack(&stack);

    return 0;
}
