#include <stdio.h>
#include <stdlib.h>

#define MAX 100

void display(int arr[], int size);
void insertFront(int arr[], int *size, int element);
void insertEnd(int arr[], int *size, int element);
void insertMiddle(int arr[], int *size, int element);
void deleteFront(int arr[], int *size);
void deleteEnd(int arr[], int *size);
void deleteMiddle(int arr[], int *size);
void sortArray(int arr[], int size);
int searchArray(int arr[], int size, int element);

int main() {
    int arr[MAX];
    int size = 0;
    int choice, element, index;

    while (1) {
        printf("\nArray Operations Menu:\n");
        printf("1. Insert at Front\n");
        printf("2. Insert at End\n");
        printf("3. Insert at Middle\n");
        printf("4. Delete at Front\n");
        printf("5. Delete at End\n");
        printf("6. Delete at Middle\n");
        printf("7. Sort Array\n");
        printf("8. Search Array\n");
        printf("9. Display Array\n");
        printf("10. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                printf("Enter element to insert at front: ");
                scanf("%d", &element);
                insertFront(arr, &size, element);
                break;
            case 2:
                printf("Enter element to insert at end: ");
                scanf("%d", &element);
                insertEnd(arr, &size, element);
                break;
            case 3:
                printf("Enter element to insert at middle: ");
                scanf("%d", &element);
                insertMiddle(arr, &size, element);
                break;
            case 4:
                deleteFront(arr, &size);
                break;
            case 5:
                deleteEnd(arr, &size);
                break;
            case 6:
                deleteMiddle(arr, &size);
                break;
            case 7:
                sortArray(arr, size);
                break;
            case 8:
                printf("Enter element to search: ");
                scanf("%d", &element);
                index = searchArray(arr, size, element);
                if (index != -1)
                    printf("Element found at index %d\n", index);
                else
                    printf("Element not found\n");
                break;
            case 9:
                display(arr, size);
                break;
            case 10:
                exit(0);
            default:
                printf("Invalid choice. Please try again.\n");
        }
    }

    return 0;
}

void display(int arr[], int size) {
    if (size == 0) {
        printf("Array is empty\n");
        return;
    }
    printf("Array elements: ");
    for (int i = 0; i < size; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");
}

void insertFront(int arr[], int *size, int element) {
    if (*size >= MAX) {
        printf("Array is full\n");
        return;
    }
    for (int i = *size; i > 0; i--) {
        arr[i] = arr[i - 1];
    }
    arr[0] = element;
    (*size)++;
}

void insertEnd(int arr[], int *size, int element) {
    if (*size >= MAX) {
        printf("Array is full\n");
        return;
    }
    arr[*size] = element;
    (*size)++;
}

void insertMiddle(int arr[], int *size, int element) {
    if (*size >= MAX) {
        printf("Array is full\n");
        return;
    }
    int middle = *size / 2;
    for (int i = *size; i > middle; i--) {
        arr[i] = arr[i - 1];
    }
    arr[middle] = element;
    (*size)++;
}

void deleteFront(int arr[], int *size) {
    if (*size == 0) {
        printf("Array is empty\n");
        return;
    }
    for (int i = 0; i < *size - 1; i++) {
        arr[i] = arr[i + 1];
    }
    (*size)--;
}

void deleteEnd(int arr[], int *size) {
    if (*size == 0) {
        printf("Array is empty\n");
        return;
    }
    (*size)--;
}

void deleteMiddle(int arr[], int *size) {
    if (*size == 0) {
        printf("Array is empty\n");
        return;
    }
    int middle = *size / 2;
    for (int i = middle; i < *size - 1; i++) {
        arr[i] = arr[i + 1];
    }
    (*size)--;
}

void sortArray(int arr[], int size) {
    for (int i = 0; i < size - 1; i++) {
        for (int j = i + 1; j < size; j++) {
            if (arr[i] > arr[j]) {
                int temp = arr[i];
                arr[i] = arr[j];
                arr[j] = temp;
            }
        }
    }
    printf("Array sorted\n");
}

int searchArray(int arr[], int size, int element) {
    for (int i = 0; i < size; i++) {
        if (arr[i] == element) {
            return i;
        }
    }
    return -1;
}
